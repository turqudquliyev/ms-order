import static org.gradle.api.JavaVersion.VERSION_17

plugins {
    id 'java'
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
    id 'org.hibernate.orm' version "${hibernateOrmVersion}"
    id 'groovy'
}

apply plugin: 'org.hibernate.orm'

group = "${groupName}"
version = "${appVersion}"

java {
    sourceCompatibility = VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation "org.apache.groovy:groovy:${groovyVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "io.github.benas:random-beans:${enhanceRandom}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

boolean testTime = false

test {
    testTime = true
    useJUnitPlatform()
}

if (!testTime) {
    hibernate {
        enhancement {
            enableLazyInitialization = true
            enableDirtyTracking = false
            enableAssociationManagement = false
            enableExtendedEnhancement = false
        }
    }
}